version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=gafus
      - POSTGRES_USER=gafus
      - POSTGRES_PASSWORD=gafus_password
    ports:
      - "35432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gafus -d gafus"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  bull-board:
    image: local/gafus-bull:dev
    environment:
      - NODE_ENV=production
      - PORT=3002
      - REDIS_URL=redis://redis:6379
    ports:
      - "33002:3002"
    depends_on:
      redis:
        condition: service_healthy

  web:
    image: local/gafus-web:dev
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://gafus:gafus_password@postgres:5432/gafus
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=smoke_secret
      - NEXTAUTH_URL=http://localhost:33000
      - AUTH_COOKIE_DOMAIN=localhost
    ports:
      - "33000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  trainer-panel:
    image: local/gafus-trainer:dev
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://gafus:gafus_password@postgres:5432/gafus
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=smoke_secret
      - NEXTAUTH_URL=http://localhost:33001
      - AUTH_COOKIE_DOMAIN=localhost
    ports:
      - "33001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  error-dashboard:
    image: local/gafus-monitor:dev
    environment:
      - NODE_ENV=production
      - PORT=3005
      - DATABASE_URL=postgresql://gafus:gafus_password@postgres:5432/gafus
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=smoke_secret
      - NEXTAUTH_URL=http://localhost:33005
      - AUTH_COOKIE_DOMAIN=localhost
    ports:
      - "33005:3005"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  worker:
    image: local/gafus-worker:dev
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://gafus:gafus_password@postgres:5432/gafus
      - REDIS_URL=redis://redis:6379
      - ERROR_DASHBOARD_URL=http://error-dashboard:3005
      - VAPID_PUBLIC_KEY=dummy
      - VAPID_PRIVATE_KEY=dummy
      - VAPID_SUBJECT=mailto:admin@example.com
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  telegram-bot:
    image: local/gafus-telegram:dev
    environment:
      - TELEGRAM_BOT_TOKEN=dummy
      - DATABASE_URL=postgresql://gafus:gafus_password@postgres:5432/gafus
    # Для smoke запускаем без реального подключения к Telegram
    command: ["node", "-e", "require('@gafus/prisma'); console.log('bot smoke ok');"]
    depends_on:
      postgres:
        condition: service_healthy

networks:
  default:
    name: gafus_smoke_net

