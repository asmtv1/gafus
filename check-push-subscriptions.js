const { PrismaClient } = require("@prisma/client");

const prisma = new PrismaClient();

async function checkPushSubscriptions() {
  try {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º push-–ø–æ–¥–ø–∏—Å–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ push-–ø–æ–¥–ø–∏—Å–∫–∏
    const subscriptions = await prisma.pushSubscription.findMany({
      include: {
        user: {
          select: {
            id: true,
            username: true,
          },
        },
      },
    });

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ push-–ø–æ–¥–ø–∏—Å–æ–∫: ${subscriptions.length}`);

    if (subscriptions.length === 0) {
      console.log("‚ùå Push-–ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!");
      console.log("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:");
      console.log("   1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ —Ä–∞–∑—Ä–µ—à–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ");
      console.log("   2. Push-–ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –±—ã–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î");
      console.log("   3. –ü—Ä–æ–±–ª–µ–º–∞ —Å Service Worker");
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
    subscriptions.forEach((sub, index) => {
      console.log(`\nüì± –ü–æ–¥–ø–∏—Å–∫–∞ ${index + 1}:`);
      console.log(`   ID: ${sub.id}`);
      console.log(`   User ID: ${sub.userId}`);
      console.log(`   Username: ${sub.user?.username || "N/A"}`);
      console.log(`   Endpoint: ${sub.endpoint.substring(0, 50)}...`);
      console.log(`   Keys: ${JSON.stringify(sub.keys)}`);
      console.log(`   Created: ${sub.createdAt}`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    console.log("\nüîî –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...");
    const notifications = await prisma.stepNotification.findMany({
      include: {
        user: {
          select: {
            username: true,
          },
        },
      },
      orderBy: {
        createdAt: "desc",
      },
      take: 5,
    });

    console.log(`üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${notifications.length}`);

    notifications.forEach((notif, index) => {
      console.log(`\nüì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${index + 1}:`);
      console.log(`   ID: ${notif.id}`);
      console.log(`   User: ${notif.user?.username || "N/A"}`);
      console.log(`   Day: ${notif.day}, Step: ${notif.stepIndex}`);
      console.log(`   Sent: ${notif.sent}`);
      console.log(`   Job ID: ${notif.jobId || "N/A"}`);
      console.log(`   Created: ${notif.createdAt}`);
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:", error);
  } finally {
    await prisma.$disconnect();
  }
}

checkPushSubscriptions();
