# HTTP to HTTPS redirect for main domain
server {
    listen 80;
    server_name gafus.ru www.gafus.ru;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main domain configuration with HTTPS
server {
    listen 443 ssl;
    http2 on;
    server_name gafus.ru www.gafus.ru;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/gafus.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gafus.ru/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' data: https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: blob: https:; media-src 'self' blob: https:; connect-src 'self' https: wss:; frame-src 'self' https://www.youtube.com https://www.youtube-nocookie.com; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; worker-src 'self' blob:;" always;
    
    # Static files from CDN (только CDN, без локального fallback)

    # Root static files from CDN (pet-avatar.jpg, etc.)
    location ~* ^/(pet-avatar\.jpg|course-logo\.(png|webp))$ {
        # Используем DNS resolver с отключением IPv6 для надежности
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        
        # Используем переменную для форсирования IPv4-only DNS резолвинга
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        
        # Проксируем запросы к медиафайлам через CDN
        proxy_pass https://$cdn_backend/uploads$request_uri;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование на стороне nginx
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        
        # Заголовки для кэширования в браузере
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Таймауты для CDN
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    location /uploads/ {
        # Используем DNS resolver с отключением IPv6 для надежности
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        
        # Используем переменную для форсирования IPv4-only DNS резолвинга
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        
        # Проксируем запросы к медиафайлам через CDN
        proxy_pass https://$cdn_backend/uploads/;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование на стороне nginx
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        
        # Заголовки для кэширования в браузере
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Таймауты для CDN
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # SVG files with correct Content-Type
    location ~* ^/uploads/.*\.svg$ {
        # Используем DNS resolver с отключением IPv6 для надежности
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        
        # Используем переменную для форсирования IPv4-only DNS резолвинга
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        
        # Проксируем запросы к медиафайлам через CDN
        proxy_pass https://$cdn_backend$request_uri;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование на стороне nginx
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        
        # Заголовки для кэширования в браузере
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Исправляем Content-Type для SVG файлов
        proxy_hide_header Content-Type;
        add_header Content-Type "image/svg+xml" always;
        
        # Таймауты для CDN
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # Icons and other static files
    location /icons/ {
        # Проксируем иконки через CDN
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        proxy_pass https://$cdn_backend/uploads/icons/;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование
        proxy_cache cdn_cache;
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;

        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Увеличиваем лимиты для загрузки файлов (для основного домена)
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Static files from Next.js app public folder (logo, og-image, etc.)
    location ~* ^/(logo\.png|og-image-.*\.png|paw\.svg|favicon\.ico|presentation\.html)$ {
        proxy_pass http://gafus-web:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование статических файлов
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Main web application
    location / {
        proxy_pass http://gafus-web:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Настройки для правильной передачи cookies
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        
        # Таймауты для прокси
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Trainer Panel
    location /trainer/ {
        proxy_pass http://gafus-trainer-panel:3001/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    

    # Error Dashboard
    location /errors/ {
        proxy_pass http://gafus-error-dashboard:3005/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Bull Board
    location /queues/ {
        proxy_pass http://gafus-bull-board:3002/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# HTTP to HTTPS redirect for API subdomain
server {
    listen 80;
    server_name api.gafus.ru;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# API subdomain
server {
    listen 443 ssl;
    http2 on;
    server_name api.gafus.ru;
    
    # SSL configuration (same as main domain)
    ssl_certificate /etc/letsencrypt/live/gafus.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gafus.ru/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' data: https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: blob: https:; media-src 'self' blob: https:; connect-src 'self' https: wss:; frame-src 'self' https://www.youtube.com https://www.youtube-nocookie.com; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; worker-src 'self' blob:;" always;
    
    # Static files from CDN (только CDN, без локального fallback)
    location /uploads/ {
        # Используем DNS resolver с отключением IPv6 для надежности
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        
        # Используем переменную для форсирования IPv4-only DNS резолвинга
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        
        # Проксируем запросы к медиафайлам через CDN
        proxy_pass https://$cdn_backend/uploads/;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование на стороне nginx
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        
        # Заголовки для кэширования в браузере
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Таймауты для CDN
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # Icons and other static files
    location /icons/ {
        # Проксируем иконки через CDN
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        proxy_pass https://$cdn_backend/uploads/icons/;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование
        proxy_cache cdn_cache;
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;

        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Увеличиваем лимиты для загрузки файлов (для API subdomain)
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # API routes
    location / {
        proxy_pass http://gafus-web:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Настройки для правильной передачи cookies
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        
        # Таймауты для прокси
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# HTTP to HTTPS redirect for trainer-panel subdomain
server {
    listen 80;
    server_name trainer-panel.gafus.ru;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Trainer Panel subdomain
server {
    listen 443 ssl;
    http2 on;
    server_name trainer-panel.gafus.ru;
    
    # SSL configuration (same as main domain)
    ssl_certificate /etc/letsencrypt/live/gafus.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gafus.ru/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' data: https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: blob: https:; media-src 'self' blob: https:; connect-src 'self' https: wss:; frame-src 'self' https://www.youtube.com https://www.youtube-nocookie.com; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; worker-src 'self' blob:;" always;
    
    # Static files from CDN (только CDN, без локального fallback)

    # Root static files from CDN (pet-avatar.jpg, etc.)
    location ~* ^/(pet-avatar\.jpg|course-logo\.(png|webp))$ {
        # Используем DNS resolver с отключением IPv6 для надежности
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        
        # Используем переменную для форсирования IPv4-only DNS резолвинга
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        
        # Проксируем запросы к медиафайлам через CDN
        proxy_pass https://$cdn_backend/uploads$request_uri;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование на стороне nginx
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        
        # Заголовки для кэширования в браузере
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Таймауты для CDN
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    location /uploads/ {
        # Используем DNS resolver с отключением IPv6 для надежности
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        
        # Используем переменную для форсирования IPv4-only DNS резолвинга
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        
        # Проксируем запросы к медиафайлам через CDN
        proxy_pass https://$cdn_backend/uploads/;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование на стороне nginx
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        
        # Заголовки для кэширования в браузере
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Таймауты для CDN
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # SVG files with correct Content-Type
    location ~* ^/uploads/.*\.svg$ {
        # Используем DNS resolver с отключением IPv6 для надежности
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        
        # Используем переменную для форсирования IPv4-only DNS резолвинга
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        
        # Проксируем запросы к медиафайлам через CDN
        proxy_pass https://$cdn_backend$request_uri;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование на стороне nginx
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        
        # Заголовки для кэширования в браузере
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Исправляем Content-Type для SVG файлов
        proxy_hide_header Content-Type;
        add_header Content-Type "image/svg+xml" always;
        
        # Таймауты для CDN
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # Icons and other static files
    location /icons/ {
        # Проксируем иконки через CDN
        resolver 8.8.8.8 1.1.1.1 ipv6=off valid=10s;
        set $cdn_backend "gafus-media.storage.yandexcloud.net";
        proxy_pass https://$cdn_backend/uploads/icons/;
        proxy_ssl_server_name on;
        proxy_set_header Host gafus-media.storage.yandexcloud.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование
        proxy_cache cdn_cache;
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;

        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Увеличиваем лимиты для загрузки файлов (глобально для сервера)
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Static files from Next.js app public folder (logo, og-image, etc.)
    location ~* ^/(logo\.png|og-image-.*\.png|paw\.svg|favicon\.ico|presentation\.html)$ {
        proxy_pass http://gafus-web:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Кэширование статических файлов
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Trainer Panel
    location / {
        proxy_pass http://gafus-trainer-panel:3001/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Настройки для правильной передачи cookies
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        
        # Таймауты для прокси
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# HTTP to HTTPS redirect for monitor subdomain
server {
    listen 80;
    server_name monitor.gafus.ru;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Monitoring subdomain
server {
    listen 443 ssl;
    http2 on;
    server_name monitor.gafus.ru;
    
    # SSL configuration (same as main domain)
    ssl_certificate /etc/letsencrypt/live/gafus.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gafus.ru/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' data: https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: blob: https:; media-src 'self' blob: https:; connect-src 'self' https: wss:; frame-src 'self' https://www.youtube.com https://www.youtube-nocookie.com; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; worker-src 'self' blob:;" always;
    
    # Error Dashboard
    location / {
        proxy_pass http://gafus-error-dashboard:3005/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Настройки для правильной передачи cookies
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }
}

# HTTP to HTTPS redirect for queues subdomain
server {
    listen 80;
    server_name queues.gafus.ru;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Queue management subdomain
server {
    listen 443 ssl;
    http2 on;
    server_name queues.gafus.ru;
    
    # SSL configuration (same as main domain)
    ssl_certificate /etc/letsencrypt/live/gafus.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gafus.ru/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: blob: https:; media-src 'self' blob: https:; connect-src 'self' https: wss:; frame-src 'self' https://www.youtube.com https://www.youtube-nocookie.com; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none';" always;
    
    # Bull Board
    location / {
        proxy_pass http://gafus-bull-board:3002/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Настройки для правильной передачи cookies
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }
}

# HTTP to HTTPS redirect for admin subdomain
server {
    listen 80;
    server_name adminka.gafus.ru;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Admin Panel subdomain
server {
    listen 443 ssl;
    http2 on;
    server_name adminka.gafus.ru;
    
    # SSL configuration (same as main domain)
    ssl_certificate /etc/letsencrypt/live/gafus.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gafus.ru/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net; img-src 'self' data: blob: https:; media-src 'self' blob: https:; connect-src 'self' https: wss:; frame-src 'self' https://www.youtube.com https://www.youtube-nocookie.com; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none';" always;
    
    # Admin Panel
    location / {
        proxy_pass http://gafus-admin-panel:3006/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Настройки для правильной передачи cookies
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
    }
}