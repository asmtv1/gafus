# Base stage - для сборки
FROM node:20-alpine AS base

WORKDIR /app

# Включаем pnpm
RUN corepack enable && corepack prepare pnpm@9.1.0 --activate

# Копируем файлы конфигурации
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml turbo.json tsconfig.base.json ./

# Копируем исходный код
COPY packages ./packages

# Устанавливаем зависимости
RUN pnpm install --frozen-lockfile

# Копируем tsconfig файлы
COPY packages/*/tsconfig.json ./packages/*/

# Генерируем Prisma client (без ERD в контейнере)
RUN cd packages/prisma \
  && cp schema.prisma schema.prisma.bak \
  && awk 'BEGIN{skip=0} /^generator erd \{/{skip=1} skip && /^\}/{skip=0; next} !skip {print}' schema.prisma > schema.tmp \
  && mv schema.tmp schema.prisma \
  && for i in 1 2 3; do pnpm db:generate && break || (echo "Prisma generate attempt $i failed, retrying..." && sleep 5); done \
  && mv schema.prisma.bak schema.prisma

# Создаем папку для Prisma
RUN mkdir -p /app/node_modules/.prisma

# Копируем Prisma client
RUN find /app/node_modules/.pnpm -name ".prisma" -type d -exec cp -r {}/client /app/node_modules/.prisma/ \;
RUN find /app/node_modules/.pnpm -name ".prisma" -type d -exec cp -r {}/schema.prisma /app/node_modules/.prisma/ \;

# Копируем Prisma Query Engine
RUN find /app/node_modules/.pnpm -name "libquery_engine-*" -type f -exec cp {} /app/node_modules/.prisma/ \;

# Собираем приложение (включая logger для seed)
RUN pnpm build --filter @gafus/prisma --filter @gafus/logger

# Готовим минимальный продовый пакет для prisma (включая prisma CLI и devDependencies для seed)
RUN pnpm deploy --legacy --filter @gafus/prisma --prod /app/deploy

# Production stage - только runtime
FROM node:20-alpine AS runner

WORKDIR /app

# Создаем пользователя
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 prisma

# Устанавливаем только необходимые пакеты и pnpm через corepack
RUN apk add --no-cache curl postgresql-client \
  && corepack enable \
  && corepack prepare pnpm@9.1.0 --activate

# Копируем минимальный деплой-пакет (с node_modules)
COPY --from=base /app/deploy/ ./

# Копируем пакет logger для seed.ts
COPY --from=base /app/packages/logger/dist ./packages/logger/dist
COPY --from=base /app/packages/logger/package.json ./packages/logger/package.json

# Устанавливаем tsx для запуска seed.ts и необходимые зависимости
RUN npm install -g tsx && \
    npm install bcrypt && \
    ln -s /app/packages/logger /app/node_modules/@gafus/logger

# Устанавливаем права доступа
RUN chown -R prisma:nodejs /app
USER prisma

# Запускаем приложение (Prisma CLI)
CMD ["sleep", "infinity"]
