services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: gafus-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-gafus}
      - POSTGRES_USER=${POSTGRES_USER:-gafus}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Убрали открытые порты - доступ только внутри Docker сети
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gafus -d gafus"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis
  redis:
    image: redis:7-alpine
    container_name: gafus-redis
    # Убрали открытые порты - доступ только внутри Docker сети
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Web Application
  web:
    image: ghcr.io/asmtv1/gafus-web:latest
    container_name: gafus-web
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DISABLE_CONSOLE_LOGGING=${DISABLE_CONSOLE_LOGGING:-false}
      - ANALYZE=${ANALYZE:-false}
      - CSRF_STRICT=${CSRF_STRICT:-false}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - AUTH_COOKIE_DOMAIN=${AUTH_COOKIE_DOMAIN}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}
      - NEXT_PUBLIC_TRAINER_PANEL_URL=${NEXT_PUBLIC_TRAINER_PANEL_URL}
      - ERROR_DASHBOARD_URL=${ERROR_DASHBOARD_URL}
      - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
      - VAPID_SUBJECT=${VAPID_SUBJECT:-mailto:admin@gafus.ru}
      # Yandex Cloud CDN credentials
      - YC_ACCESS_KEY_ID=${YC_ACCESS_KEY_ID}
      - YC_SECRET_ACCESS_KEY=${YC_SECRET_ACCESS_KEY}
    volumes:
      - uploads_data:/var/www/public-assets/uploads
    # Убрали открытые порты - доступ только через Nginx
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    depends_on:
      - postgres
      - redis

  # Trainer Panel
  trainer-panel:
    image: ghcr.io/asmtv1/gafus-trainer-panel:latest
    container_name: gafus-trainer-panel
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DISABLE_CONSOLE_LOGGING=${DISABLE_CONSOLE_LOGGING:-false}
      - CSRF_STRICT=${CSRF_STRICT:-false}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${TRAINER_PANEL_URL:-https://trainer-panel.gafus.ru}
      - AUTH_COOKIE_DOMAIN=${AUTH_COOKIE_DOMAIN:-.gafus.ru}
      # Yandex Cloud CDN credentials
      - YC_ACCESS_KEY_ID=${YC_ACCESS_KEY_ID}
      - YC_SECRET_ACCESS_KEY=${YC_SECRET_ACCESS_KEY}
    volumes:
      - uploads_data:/var/www/public-assets/uploads
    # Убрали открытые порты - доступ только через Nginx
    restart: unless-stopped

    depends_on:
      - postgres
      - redis

  # Error Dashboard
  error-dashboard:
    image: ghcr.io/asmtv1/gafus-error-dashboard:latest
    container_name: gafus-error-dashboard
    environment:
      - NODE_ENV=production
      - PORT=3005
      - DISABLE_CONSOLE_LOGGING=${DISABLE_CONSOLE_LOGGING:-false}
      - CSRF_STRICT=${CSRF_STRICT:-false}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${ERROR_DASHBOARD_URL:-https://monitor.gafus.ru}
      - AUTH_COOKIE_DOMAIN=${AUTH_COOKIE_DOMAIN:-.gafus.ru}
    # Убрали открытые порты - доступ только через Nginx
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  # Prisma Database Management
  prisma:
    image: ghcr.io/asmtv1/gafus-prisma:latest
    container_name: gafus-prisma
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
    restart: unless-stopped
    depends_on:
      - postgres

  # Worker
  worker:
    image: ghcr.io/asmtv1/gafus-worker:latest
    container_name: gafus-worker
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ERROR_DASHBOARD_URL=${ERROR_DASHBOARD_INTERNAL_URL:-http://gafus-error-dashboard:3005}
      - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
      - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
      - VAPID_SUBJECT=${VAPID_SUBJECT:-mailto:admin@gafus.ru}
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  # Bull Board
  bull-board:
    image: ghcr.io/asmtv1/gafus-bull-board:latest
    container_name: gafus-bull-board
    environment:
      - NODE_ENV=production
      - PORT=3002
      - REDIS_URL=redis://redis:6379
    # Убрали открытые порты - доступ только через Nginx
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      redis:
        condition: service_healthy

  # Telegram Bot
  telegram-bot:
    image: ghcr.io/asmtv1/gafus-telegram-bot:latest
    container_name: gafus-telegram-bot
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    restart: unless-stopped
    depends_on:
      - postgres
      - redis

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: gafus-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/conf.d:/etc/nginx/conf.d:ro
      - uploads_data:/var/www/uploads
      - ./packages/public-assets/public:/var/www/public-assets
      - ../../apps/web/public:/var/www/web-public:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    command: >
      sh -c "
        # Копируем статические файлы в volume, если их там нет
        if [ ! -d /var/www/uploads ] || [ -z \"$(ls -A /var/www/uploads 2>/dev/null)\" ]; then
          echo 'Копируем файлы из public-assets в uploads...'
          cp -r /var/www/public-assets/uploads/* /var/www/uploads/ 2>/dev/null || true
        fi &&
        # Создаем симлинк для совместимости с приложениями
        rm -rf /var/www/public-assets/uploads &&
        ln -sf /var/www/uploads /var/www/public-assets/uploads &&
        echo 'Запускаем nginx...' &&
        nginx -g 'daemon off;'
      "
    restart: unless-stopped
    depends_on:
      - web
      - trainer-panel
      - error-dashboard
      - bull-board

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: gafus-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@gafus.ru --agree-tos --no-eff-email -d gafus.ru -d www.gafus.ru -d api.gafus.ru -d trainer-panel.gafus.ru -d monitor.gafus.ru -d queues.gafus.ru
    depends_on:
      - nginx

volumes:
  postgres_data:
  uploads_data:
