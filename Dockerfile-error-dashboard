# syntax=docker/dockerfile:1

# ─────────────────────────────────────────────
# Stage 0: builder — сборка error-dashboard с hoisting
# ─────────────────────────────────────────────
FROM node:20-alpine AS builder
WORKDIR /app

# 1️⃣ Corepack + pnpm
RUN corepack enable && corepack prepare pnpm@9.1.0 --activate

# 2️⃣ Копируем ВСЕ исходники сразу
COPY . .

# 3️⃣ Устанавливаем ВСЕ зависимости (включая hoisted)
RUN pnpm install --no-frozen-lockfile

# 4️⃣ Генерируем Prisma client
RUN cd packages/prisma && pnpm db:generate

# 5️⃣ Билдим с использованием hoisted node_modules
RUN pnpm build --filter @gafus/error-dashboard

# ─────────────────────────────────────────────
# Stage 1: runner — минимальный production
# ─────────────────────────────────────────────
FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production

# 1️⃣ Corepack + pnpm
RUN corepack enable && corepack prepare pnpm@9.1.0 --activate

# 2️⃣ Копируем только production зависимости
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/apps/error-dashboard/.next ./apps/error-dashboard/.next
COPY --from=builder /app/apps/error-dashboard/next.config.ts ./apps/error-dashboard/next.config.ts
COPY --from=builder /app/apps/error-dashboard/tailwind.config.js ./apps/error-dashboard/tailwind.config.js
COPY --from=builder /app/apps/error-dashboard/postcss.config.js ./apps/error-dashboard/postcss.config.js

# 3️⃣ Запуск
WORKDIR /app/apps/error-dashboard
EXPOSE 3005
CMD ["pnpm", "start:prod"]
