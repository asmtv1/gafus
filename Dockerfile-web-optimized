# Base stage - для сборки
FROM node:20-alpine AS base

WORKDIR /app

# Включаем pnpm
RUN corepack enable && corepack prepare pnpm@9.1.0 --activate

# Копируем файлы конфигурации
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml turbo.json tsconfig.base.json ./

# Копируем исходный код
COPY packages ./packages
COPY apps ./apps

# Устанавливаем зависимости
RUN pnpm install --frozen-lockfile

# Копируем tsconfig файлы
COPY packages/*/tsconfig.json ./packages/*/
COPY apps/*/tsconfig.json ./apps/*/

# Генерируем Prisma client (без ERD в контейнере)
RUN cd packages/prisma \
  && cp schema.prisma schema.prisma.bak \
  && awk 'BEGIN{skip=0} /^generator erd \{/{skip=1} skip && /^\}/{skip=0; next} !skip {print}' schema.prisma > schema.tmp \
  && mv schema.tmp schema.prisma \
  && pnpm db:generate \
  && mv schema.prisma.bak schema.prisma

# Создаем папку для Prisma
RUN mkdir -p /app/node_modules/.prisma

# Копируем Prisma client
RUN find /app/node_modules/.pnpm -name ".prisma" -type d -exec cp -r {}/client /app/node_modules/.prisma/ \;
RUN find /app/node_modules/.pnpm -name ".prisma" -type d -exec cp -r {}/schema.prisma /app/node_modules/.prisma/ \;

# Копируем Prisma Query Engine рядом с клиентом (ожидаемое Prisma расположение)
RUN find /app/node_modules/.pnpm -name "libquery_engine-*" -type f -exec cp {} /app/node_modules/.prisma/client/ \;

# Собираем приложение
RUN pnpm build --filter @gafus/web

# Production stage - только runtime
FROM node:20-alpine AS runner

WORKDIR /app

# Создаем пользователя
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Устанавливаем только необходимые пакеты
RUN apk add --no-cache curl

# Копируем только standalone версию Next.js
COPY --from=base /app/apps/web/.next/standalone ./
COPY --from=base /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=base /app/apps/web/public ./apps/web/public

# Копируем Prisma client и Query Engine (оставляем .pnpm из standalone)
COPY --from=base /app/node_modules/.prisma ./node_modules/.prisma

# Дублируем Prisma client рядом с приложением (для поиска движка рантаймом)
RUN mkdir -p ./apps/web/.prisma && cp -r ./node_modules/.prisma/client ./apps/web/.prisma/client

# Устанавливаем права доступа
RUN chown -R nextjs:nodejs /app
USER nextjs

# Health check (используем hostname, т.к. сервис слушает не на loopback)
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD sh -c 'curl -fsS http://$HOSTNAME:3000/api/ping || exit 1'

# Запускаем приложение
EXPOSE 3000
CMD ["node", "apps/web/server.js"]
