# syntax=docker/dockerfile:1

# ─────────────────────────────────────────────
# Stage 0: builder — сборка приложения
# ─────────────────────────────────────────────
FROM node:20-alpine AS builder
WORKDIR /app

# Установка pnpm
RUN corepack enable && corepack prepare pnpm@9.1.0 --activate

# Копируем все файлы проекта
COPY . .

# Устанавливаем ВСЕ зависимости (включая dev)
RUN pnpm install --frozen-lockfile

# Копируем исходный код только нужных пакетов
COPY packages/types ./packages/types
COPY packages/prisma ./packages/prisma

# Генерируем Prisma client
RUN cd packages/prisma && pnpm db:generate

# Билдим пакеты в правильном порядке
RUN pnpm --filter @gafus/types run build
RUN pnpm build --filter @gafus/prisma

# ─────────────────────────────────────────────
# Stage 1: runner — минимальный production
# ─────────────────────────────────────────────
FROM node:20-alpine AS runner
WORKDIR /app

# Создаем пользователя для безопасности
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 prisma

# Установка pnpm
RUN corepack enable && corepack prepare pnpm@9.1.0 --activate

# Устанавливаем только production зависимости
COPY . .
RUN pnpm install --frozen-lockfile --prod --ignore-scripts

# Копируем собранные пакеты
COPY --from=builder /app/packages/types/dist ./packages/types/dist
COPY --from=builder /app/packages/types/package.json ./packages/types/package.json
COPY --from=builder /app/packages/prisma/dist ./packages/prisma/dist
COPY --from=builder /app/packages/prisma/package.json ./packages/prisma/package.json
COPY --from=builder /app/packages/prisma/schema.prisma ./packages/prisma/schema.prisma
COPY --from=builder /app/packages/prisma/migrations ./packages/prisma/migrations

# Копируем package.json для правильной работы
COPY --from=builder /app/package.json ./
COPY --from=builder /app/pnpm-workspace.yaml ./

# Устанавливаем права доступа
RUN chown -R prisma:nodejs /app
USER prisma

# Переменные окружения
ENV NODE_ENV=production

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD node -e "console.log('Prisma container is healthy')" || exit 1

# Запускаем Prisma
CMD ["pnpm", "--filter", "@gafus/prisma", "run", "db:migrate:deploy"]