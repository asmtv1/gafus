# syntax=docker/dockerfile:1

# ─────────────────────────────────────────────
# Stage 0: builder — сборка приложения
# ─────────────────────────────────────────────
FROM node:20-alpine AS base
WORKDIR /app

# Установка pnpm
RUN corepack enable && corepack prepare pnpm@9.1.0 --activate

# Копируем только файлы зависимостей для кэширования
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY tsconfig.base.json ./

# Копируем package.json всех пакетов
COPY packages/*/package.json ./packages/*/
COPY apps/bull-board/package.json ./apps/bull-board/

# Устанавливаем только production зависимости
RUN pnpm install --frozen-lockfile --prod

# ─────────────────────────────────────────────
# Stage 0: builder — сборка приложения
# ─────────────────────────────────────────────
FROM node:20-alpine AS builder
WORKDIR /app

# Установка pnpm
RUN corepack enable && corepack prepare pnpm@9.1.0 --activate

# Копируем все файлы проекта
COPY . .

# Устанавливаем ВСЕ зависимости (включая dev)
RUN pnpm install --frozen-lockfileCOPY packages/types ./packages/types
COPY packages/queues ./packages/queues
COPY apps/bull-board ./apps/bull-board

# Билдим пакеты в правильном порядке
RUN pnpm --filter @gafus/types run build
RUN pnpm build --filter @gafus/queues
RUN pnpm build --filter @gafus/bull-board

# ─────────────────────────────────────────────
# Stage 1: runner — минимальный production
# ─────────────────────────────────────────────
FROM node:20-alpine AS runner
WORKDIR /app

# Создаем пользователя для безопасности
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 bullboard

# Установка pnpm
RUN corepack enable && corepack prepare pnpm@9.1.0 --activate

# Копируем только production зависимости из base stage
# Устанавливаем только production зависимости
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY tsconfig.base.json ./
COPY packages/*/package.json ./packages/*/
RUN pnpm install --frozen-lockfile --prod

# Копируем собранные пакеты
COPY --from=builder /app/packages/types/dist ./packages/types/dist
COPY --from=builder /app/packages/types/package.json ./packages/types/package.json
COPY --from=builder /app/packages/queues/dist ./packages/queues/dist
COPY --from=builder /app/packages/queues/package.json ./packages/queues/package.json

# Копируем собранное приложение
COPY --from=builder /app/apps/bull-board/dist ./apps/bull-board/dist
COPY --from=builder /app/apps/bull-board/package.json ./apps/bull-board/package.json

# Копируем package.json для правильной работы
COPY --from=builder /app/package.json ./
COPY --from=builder /app/pnpm-workspace.yaml ./

# Устанавливаем права доступа
RUN chown -R bullboard:nodejs /app
USER bullboard

# Переменные окружения
ENV NODE_ENV=production
ENV PORT=3002
ENV HOSTNAME="0.0.0.0"

# Открываем порт
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3002 || exit 1

# Запускаем приложение
CMD ["node", "apps/bull-board/dist/bull-board.js"]