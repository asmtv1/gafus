#!/usr/bin/env node

const { spawn } = require("child_process");
const { execSync } = require("child_process");

console.warn("üöÄ –ó–∞–ø—É—Å–∫ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ì–∞—Ñ—É—Å...\n");

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ–±—Ä–∞–Ω—ã
try {
  console.warn("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...");
  execSync("pnpm check:builds", { stdio: "inherit" });
} catch (error) {
  console.warn("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ —Å–æ–±—Ä–∞–Ω—ã. –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ...");
  try {
    execSync("pnpm --filter @gafus/web build", { stdio: "inherit" });
    execSync("pnpm --filter @gafus/error-dashboard build", { stdio: "inherit" });
  } catch (buildError) {
    console.warn("‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.");
    process.exit(1);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
try {
  console.warn("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤...");
  execSync("pnpm check:ports", { stdio: "inherit" });
} catch (error) {
  console.log("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Ä—Ç–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.");
  process.exit(1);
}

console.log("\n‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!");
console.log("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...\n");

// –°–ø–∏—Å–æ–∫ —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞
const apps = [
  { name: "Web App", filter: "@gafus/web", port: 3002 },
  { name: "Error Dashboard", filter: "@gafus/error-dashboard", port: 3005 },
  { name: "Bull Board", filter: "@gafus/bull-board", port: 3004 },
];

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
const processes = apps.map((app) => {
  console.log(`üîÑ –ó–∞–ø—É—Å–∫ ${app.name} (–ø–æ—Ä—Ç ${app.port})...`);

  const child = spawn("pnpm", ["--filter", app.filter, "start"], {
    stdio: "pipe",
    shell: true,
    env: { ...process.env },
  });

  // –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–≤–æ–¥
  child.stdout.on("data", (data) => {
    const output = data.toString().trim();
    if (output) {
      console.log(`[${app.name}] ${output}`);
    }
  });

  child.stderr.on("data", (data) => {
    const output = data.toString().trim();
    if (output && !output.includes("Warning")) {
      console.error(`[${app.name}] ERROR: ${output}`);
    }
  });

  child.on("error", (error) => {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ ${app.name}:`, error.message);
  });

  child.on("exit", (code) => {
    if (code !== 0) {
      console.error(`‚ùå ${app.name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`);
    } else {
      console.log(`‚úÖ ${app.name} –∑–∞–≤–µ—Ä—à–µ–Ω`);
    }
  });

  return child;
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on("SIGINT", () => {
  console.log("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...");
  processes.forEach((child) => {
    child.kill("SIGINT");
  });
  process.exit(0);
});

process.on("SIGTERM", () => {
  console.log("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...");
  processes.forEach((child) => {
    child.kill("SIGTERM");
  });
  process.exit(0);
});

// –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö
setTimeout(() => {
  console.log("\nüåê –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:");
  console.log("  Web App: http://localhost:3002");
  console.log("  Error Dashboard: http://localhost:3005");
  console.log("  Bull Board: http://localhost:3004");
  console.log("\nüí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C");
}, 5000);
