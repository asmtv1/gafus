#!/usr/bin/env node

const { spawn } = require('child_process');
const path = require('path');

console.log('üöÄ –ó–∞–ø—É—Å–∫–∞—é worker –≤ watch mode...');
console.log('üìÅ –û—Ç—Å–ª–µ–∂–∏–≤–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤:', path.resolve('packages/worker/dist'));

// –ó–∞–ø—É—Å–∫–∞–µ–º nodemon –¥–ª—è worker'–∞
const workerProcess = spawn('npx', [
  'nodemon',
  'packages/worker/dist/worker/src/start-worker.js',
  '--watch', 'packages/worker/dist',
  '--ext', 'js',
  '--ignore', 'packages/worker/dist/**/*.map',
  '--delay', '1000',
  '--verbose'
], {
  stdio: 'inherit',
  shell: true,
  cwd: process.cwd()
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
workerProcess.on('close', (code) => {
  console.log(`\nüîÑ Worker –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`);
  if (code !== 0) {
    console.log('‚ö†Ô∏è  Worker –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...');
    setTimeout(() => {
      console.log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é worker...');
      // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
      require('./start-worker-watch.js');
    }, 3000);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
process.on('SIGINT', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω SIGINT, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é worker...');
  workerProcess.kill('SIGINT');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω SIGTERM, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é worker...');
  workerProcess.kill('SIGTERM');
  process.exit(0);
});

console.log('‚úÖ Worker –∑–∞–ø—É—â–µ–Ω –≤ watch mode');
console.log('üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');

