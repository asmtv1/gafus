#!/usr/bin/env node

const { spawn } = require("child_process");

console.warn("๐งช ะขะตััะธัะพะฒะฐะฝะธะต ะทะฐะฟััะบะฐ ะฟัะธะปะพะถะตะฝะธะน...\n");

// ะขะตััะธััะตะผ ัะพะปัะบะพ web ะฟัะธะปะพะถะตะฝะธะต
const testApp = { name: "Web App", filter: "@gafus/web", port: 3002 };

console.warn(`๐ ะขะตััะธััะตะผ ะทะฐะฟััะบ ${testApp.name} (ะฟะพัั ${testApp.port})...`);

const child = spawn("pnpm", ["--filter", testApp.filter, "start"], {
  stdio: "pipe",
  shell: true,
  env: { ...process.env },
});

// ะะพะณะธััะตะผ ะฒัะฒะพะด
child.stdout.on("data", (data) => {
  const output = data.toString().trim();
  if (output) {
    console.warn(`[${testApp.name}] ${output}`);
  }
});

child.stderr.on("data", (data) => {
  const output = data.toString().trim();
  if (output && !output.includes("Warning")) {
    console.error(`[${testApp.name}] ERROR: ${output}`);
  }
});

child.on("error", (error) => {
  console.error(`โ ะัะธะฑะบะฐ ะทะฐะฟััะบะฐ ${testApp.name}:`, error.message);
});

child.on("exit", (code) => {
  if (code !== 0) {
    console.error(`โ ${testApp.name} ะทะฐะฒะตััะธะปัั ั ะบะพะดะพะผ ${code}`);
  } else {
    console.warn(`โ ${testApp.name} ะทะฐะฒะตััะตะฝ`);
  }
});

// ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ัะตัะตะท 10 ัะตะบัะฝะด
setTimeout(() => {
  console.warn("\n๐ ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ัะตัั...");
  child.kill("SIGINT");
  process.exit(0);
}, 10000);
