const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcryptjs');

const prisma = new PrismaClient();

async function createTestUser() {
  try {
    console.log('üîê –•—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è...');
    const hashedPassword = await bcrypt.hash('2407041', 10);
    
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è asmtv1...\n');
    
    const user = await prisma.user.create({
      data: {
        username: 'asmtv1',
        phone: '89198031379',
        password: hashedPassword,
        isConfirmed: true,
        role: 'USER',
        profile: {
          create: {
            fullName: 'Test User ASMTV1'
          }
        }
      },
      include: {
        profile: true
      }
    });

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n');
    console.log('üìã –î–∞–Ω–Ω—ã–µ:');
    console.log(`   ID: ${user.id}`);
    console.log(`   Username: ${user.username}`);
    console.log(`   Phone: ${user.phone}`);
    console.log(`   Confirmed: ${user.isConfirmed}`);
    console.log(`   Role: ${user.role}`);
    console.log(`   Profile ID: ${user.profile?.id}`);
    console.log('\nüîë –î–ª—è –≤—Ö–æ–¥–∞:');
    console.log(`   Username: asmtv1`);
    console.log(`   Password: 2407041`);
    
  } catch (error) {
    if (error.code === 'P2002') {
      console.error('‚ùå –û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º username –∏–ª–∏ phone —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
  } finally {
    await prisma.$disconnect();
  }
}

createTestUser();

