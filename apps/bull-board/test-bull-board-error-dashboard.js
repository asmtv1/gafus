#!/usr/bin/env node
/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ bull-board –≤ error-dashboard
 * 
 * –ó–∞–ø—É—Å–∫: node apps/bull-board/test-bull-board-error-dashboard.js
 */

import { createBullBoardLogger } from '@gafus/logger/dist/index.js';

async function testBullBoardErrorDashboard() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ bull-board –≤ error-dashboard...\n');

  try {
    // –¢–µ—Å—Ç 1: Bull Board –ª–æ–≥–≥–µ—Ä
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º bull-board –ª–æ–≥–≥–µ—Ä...');
    const boardLogger = createBullBoardLogger('bull-board');
    
    // –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    boardLogger.info('Bull-Board initializing', {
      environment: 'production',
      port: 3004,
      basePath: '/admin/queues'
    });
    console.log('‚úÖ Board initialization info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è Bull Board
    boardLogger.success('Bull Board created successfully', {
      queueCount: 1,
      queueName: 'pushQueue',
      basePath: '/admin/queues',
      operation: 'create_bull_board'
    });
    console.log('‚úÖ Board creation success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    boardLogger.success('Bull-Board –∑–∞–ø—É—â–µ–Ω: http://localhost:3004/admin/queues', {
      port: 3004,
      environment: 'production',
      basePath: '/admin/queues',
      operation: 'start_server'
    });
    console.log('‚úÖ Server start success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 2: Bull Board Creation Error
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Bull Board Creation Error...');
    await boardLogger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Bull Board', new Error('Queue adapter failed'), {
      environment: 'production',
      port: 3004,
      operation: 'create_bull_board'
    });
    console.log('‚úÖ Board creation error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 3: Health Check Info
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Health Check Info...');
    boardLogger.info('Health check requested', {
      timestamp: new Date().toISOString(),
      operation: 'health_check'
    });
    console.log('‚úÖ Health check info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 4: Graceful Shutdown Info
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Graceful Shutdown Info...');
    boardLogger.info('Received SIGINT, shutting down gracefully');
    console.log('‚úÖ Graceful shutdown info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 5: Queue Connection Error
    console.log('5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Queue Connection Error...');
    await boardLogger.error('Queue connection failed', new Error('Redis connection timeout'), {
      queueName: 'pushQueue',
      operation: 'connect_queue',
      retryCount: 3
    });
    console.log('‚úÖ Queue connection error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 6: Express Server Error
    console.log('6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Express Server Error...');
    await boardLogger.error('Express server error', new Error('Port already in use'), {
      port: 3004,
      environment: 'production',
      operation: 'start_server'
    });
    console.log('‚úÖ Express server error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 7: Bull Board API Error
    console.log('7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Bull Board API Error...');
    await boardLogger.error('Bull Board API error', new Error('Invalid queue configuration'), {
      queueCount: 1,
      queueName: 'pushQueue',
      operation: 'configure_queues'
    });
    console.log('‚úÖ Bull Board API error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 8: Queue Monitoring Warning
    console.log('8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Queue Monitoring Warning...');
    boardLogger.warn('Queue monitoring disabled', {
      queueName: 'pushQueue',
      reason: 'Redis connection unstable',
      operation: 'monitor_queue'
    });
    console.log('‚úÖ Queue monitoring warning –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 9: Bull Board Route Access
    console.log('9Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Bull Board Route Access...');
    boardLogger.info('Bull Board route accessed', {
      path: '/admin/queues',
      method: 'GET',
      userAgent: 'Mozilla/5.0',
      operation: 'access_dashboard'
    });
    console.log('‚úÖ Route access info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 10: Queue Job Processing Success
    console.log('üîü –¢–µ—Å—Ç–∏—Ä—É–µ–º Queue Job Processing Success...');
    boardLogger.success('Queue job processed successfully', {
      queueName: 'pushQueue',
      jobId: 'job-123',
      jobType: 'push_notification',
      duration: 150,
      operation: 'process_job'
    });
    console.log('‚úÖ Job processing success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 11: Bull Board Configuration Update
    console.log('1Ô∏è‚É£1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Bull Board Configuration Update...');
    boardLogger.info('Bull Board configuration updated', {
      queueCount: 2,
      queueNames: ['pushQueue', 'emailQueue'],
      basePath: '/admin/queues',
      operation: 'update_configuration'
    });
    console.log('‚úÖ Configuration update info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 12: Queue Statistics Success
    console.log('1Ô∏è‚É£2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Queue Statistics Success...');
    boardLogger.success('Queue statistics retrieved', {
      queueName: 'pushQueue',
      activeJobs: 5,
      completedJobs: 150,
      failedJobs: 2,
      operation: 'get_statistics'
    });
    console.log('‚úÖ Queue statistics success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 13: Bull Board Middleware Error
    console.log('1Ô∏è‚É£3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Bull Board Middleware Error...');
    await boardLogger.error('Bull Board middleware error', new Error('Authentication failed'), {
      path: '/admin/queues',
      method: 'GET',
      operation: 'middleware_auth'
    });
    console.log('‚úÖ Middleware error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 14: Queue Cleanup Success
    console.log('1Ô∏è‚É£4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Queue Cleanup Success...');
    boardLogger.success('Queue cleanup completed', {
      queueName: 'pushQueue',
      cleanedJobs: 25,
      operation: 'cleanup_queue'
    });
    console.log('‚úÖ Queue cleanup success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 15: Bull Board Performance Warning
    console.log('1Ô∏è‚É£5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Bull Board Performance Warning...');
    boardLogger.warn('Bull Board performance degraded', {
      responseTime: 5000,
      threshold: 1000,
      queueCount: 1,
      operation: 'performance_check'
    });
    console.log('‚úÖ Performance warning –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ error-dashboard:');
    console.log('   - Reports: http://localhost:3001/reports');
    console.log('   - –ò—â–∏—Ç–µ –ª–æ–≥–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É: bull-board');
    console.log('\nüîç –û–∂–∏–¥–∞–µ–º—ã–µ –ª–æ–≥–∏:');
    console.log('   - Board initialization info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Board creation success —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Server start success —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Board creation error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Health check info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Graceful shutdown info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Queue connection error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Express server error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Bull Board API error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Queue monitoring warning —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –≤ production)');
    console.log('   - Route access info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Job processing success —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Configuration update info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Queue statistics success —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Middleware error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Queue cleanup success —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Performance warning —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –≤ production)');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testBullBoardErrorDashboard().then(() => {
  console.log('\n‚ú® –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  process.exit(0);
}).catch((error) => {
  console.error('\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error);
  process.exit(1);
});
