#!/usr/bin/env node
/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ telegram-bot –≤ error-dashboard
 * 
 * –ó–∞–ø—É—Å–∫: node apps/telegram-bot/test-telegram-bot-error-dashboard.js
 */

import { createTelegramBotLogger } from '@gafus/logger/dist/index.js';

async function testTelegramBotErrorDashboard() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ telegram-bot –≤ error-dashboard...\n');

  try {
    // –¢–µ—Å—Ç 1: Telegram Bot –ª–æ–≥–≥–µ—Ä
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º telegram-bot –ª–æ–≥–≥–µ—Ä...');
    const botLogger = createTelegramBotLogger('telegram-bot');
    
    // –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
    botLogger.info('Telegram bot initializing', {
      environment: 'production',
      hasToken: true,
      tokenLength: 45
    });
    console.log('‚úÖ Bot initialization info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    botLogger.success('Telegram bot launched successfully', {
      environment: 'production',
      botUsername: 'gafus_bot'
    });
    console.log('‚úÖ Bot launch success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 2: Bot Error
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Bot Error...');
    await botLogger.error('Bot error', new Error('Webhook validation failed'), {
      chatId: 123456789,
      userId: 987654321,
      username: 'testuser',
      messageType: 'text',
      updateId: 12345
    });
    console.log('‚úÖ Bot error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 3: User Not Found Warning
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º User Not Found Warning...');
    botLogger.warn('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', {
      chatId: 123456789,
      phone: '+79198031371',
      operation: 'find_user_by_phone'
    });
    console.log('‚úÖ User not found warning –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 4: User Confirmation Success
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º User Confirmation Success...');
    botLogger.success('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —á–µ—Ä–µ–∑ Telegram', {
      chatId: 123456789,
      phone: '+79198031371',
      userId: 'user-123',
      username: 'testuser',
      operation: 'confirm_user_telegram'
    });
    console.log('‚úÖ User confirmation success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 5: Database Update Error
    console.log('5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Database Update Error...');
    await botLogger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', new Error('Database connection timeout'), {
      chatId: 123456789,
      phone: '+79198031371',
      hasUser: true,
      operation: 'update_user_telegram_id'
    });
    console.log('‚úÖ Database update error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 6: Bot Launch Failure
    console.log('6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Bot Launch Failure...');
    await botLogger.fatal('Failed to launch Telegram bot', new Error('Invalid bot token'), {
      environment: 'production',
      hasToken: false
    });
    console.log('‚úÖ Bot launch failure –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 7: Missing Token Fatal
    console.log('7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Missing Token Fatal...');
    await botLogger.fatal('TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è', new Error('Missing Telegram Bot Token'), {
      environment: 'production',
      hasToken: false
    });
    console.log('‚úÖ Missing token fatal –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 8: Graceful Shutdown Info
    console.log('8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Graceful Shutdown Info...');
    botLogger.info('Received SIGINT, stopping bot gracefully');
    console.log('‚úÖ Graceful shutdown info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 9: Message Processing Error
    console.log('9Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Message Processing Error...');
    await botLogger.error('Message processing failed', new Error('Invalid message format'), {
      chatId: 123456789,
      userId: 987654321,
      messageType: 'unknown',
      updateId: 12346
    });
    console.log('‚úÖ Message processing error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 10: Webhook Error
    console.log('üîü –¢–µ—Å—Ç–∏—Ä—É–µ–º Webhook Error...');
    await botLogger.error('Webhook validation failed', new Error('Invalid webhook signature'), {
      chatId: 123456789,
      userId: 987654321,
      messageType: 'webhook',
      updateId: 12347
    });
    console.log('‚úÖ Webhook error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 11: Rate Limit Warning
    console.log('1Ô∏è‚É£1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Rate Limit Warning...');
    botLogger.warn('Rate limit exceeded for user', {
      chatId: 123456789,
      userId: 987654321,
      username: 'testuser',
      operation: 'send_message',
      retryAfter: 60
    });
    console.log('‚úÖ Rate limit warning –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 12: Contact Processing Success
    console.log('1Ô∏è‚É£2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Contact Processing Success...');
    botLogger.success('Contact processed successfully', {
      chatId: 123456789,
      phone: '+79198031371',
      userId: 'user-123',
      username: 'testuser',
      operation: 'process_contact'
    });
    console.log('‚úÖ Contact processing success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 13: Database Connection Error
    console.log('1Ô∏è‚É£3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Database Connection Error...');
    await botLogger.error('Database connection failed', new Error('Connection pool exhausted'), {
      chatId: 123456789,
      phone: '+79198031371',
      operation: 'find_user_by_phone',
      retryCount: 3
    });
    console.log('‚úÖ Database connection error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 14: Bot Info Update
    console.log('1Ô∏è‚É£4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Bot Info Update...');
    botLogger.info('Bot info updated successfully', {
      botUsername: 'gafus_bot',
      botId: 123456789,
      environment: 'production'
    });
    console.log('‚úÖ Bot info update –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 15: Message Sent Success
    console.log('1Ô∏è‚É£5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Message Sent Success...');
    botLogger.success('Message sent successfully', {
      chatId: 123456789,
      userId: 987654321,
      messageType: 'confirmation',
      operation: 'send_confirmation_message'
    });
    console.log('‚úÖ Message sent success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ error-dashboard:');
    console.log('   - Reports: http://localhost:3001/reports');
    console.log('   - –ò—â–∏—Ç–µ –ª–æ–≥–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É: telegram-bot');
    console.log('\nüîç –û–∂–∏–¥–∞–µ–º—ã–µ –ª–æ–≥–∏:');
    console.log('   - Bot initialization info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Bot launch success —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Bot error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - User not found warning —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - User confirmation success —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Database update error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Bot launch failure fatal —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Missing token fatal —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Graceful shutdown info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Message processing error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Webhook error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Rate limit warning —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –≤ production)');
    console.log('   - Contact processing success —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Database connection error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Bot info update —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Message sent success —Å–æ–æ–±—â–µ–Ω–∏—è');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTelegramBotErrorDashboard().then(() => {
  console.log('\n‚ú® –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  process.exit(0);
}).catch((error) => {
  console.error('\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error);
  process.exit(1);
});
