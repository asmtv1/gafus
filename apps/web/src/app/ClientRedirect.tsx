"use client";

import { useSession } from "next-auth/react";
import { useRouter, usePathname } from "next/navigation";
import { useEffect } from "react";

/**
 * –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å Next.js –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
 * –†–∞–±–æ—Ç–∞–µ—Ç –≤ –ø–∞—Ä–µ —Å middleware –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
 */
export function ClientRedirect() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const pathname = usePathname();

  useEffect(() => {
    console.log("üîç ClientRedirect:", { status, pathname, hasUser: !!session?.user });
    
    // –†–µ–¥–∏—Ä–µ–∫—Ç–∏–º —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (status === "authenticated" && session?.user && pathname === "/") {
      console.log("‚úÖ ClientRedirect: Calling router.replace('/courses')");
      router.replace("/courses");
    }
  }, [status, session, router, pathname]);

  return null;
}

