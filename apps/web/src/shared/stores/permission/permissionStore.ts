// Store –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

import { create } from "zustand";
import { persist } from "zustand/middleware";

interface PermissionState {
  permission: NotificationPermission | null;
  isLoading: boolean;
  error: string | null;

  // –î–µ–π—Å—Ç–≤–∏—è
  initializePermission: () => void;
  requestPermission: () => Promise<NotificationPermission>;
  setLoading: (loading: boolean) => void;
  setError: (error: string | null) => void;
  clearError: () => void;

  // –£—Ç–∏–ª–∏—Ç—ã
  isSupported: () => boolean;
  canRequest: () => boolean;
  isGranted: () => boolean;
}

const isNotificationSupported = () => {
  return typeof Notification !== "undefined";
};

export const usePermissionStore = create<PermissionState>()(
  persist(
    (set, get) => ({
      // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      permission: null,
      isLoading: false,
      error: null,

      // –î–µ–π—Å—Ç–≤–∏—è
      initializePermission: () => {
        if (isNotificationSupported()) {
          const currentPermission = Notification.permission;
          set({ permission: currentPermission });
        } else {
          set({ permission: "default" });
        }
      },

      requestPermission: async () => {
        console.log("üöÄ requestPermission: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è");
        
        if (!isNotificationSupported()) {
          console.log("‚ùå requestPermission: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è");
          set({ error: "–≠—Ç–æ—Ç –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" });
          return "denied";
        }

        console.log("‚úÖ requestPermission: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ");
        set({ isLoading: true, error: null });

        try {
          // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è iOS Safari, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∑–∞–≤–∏—Å–∞–Ω–∏—è
          console.log("üîß requestPermission: –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–∏—Å –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è");
          const permissionPromise = Notification.requestPermission();
          
          // –¢–∞–π–º–∞—É—Ç 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è iOS Safari
          console.log("üîß requestPermission: –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–∏—Å —Å —Ç–∞–π–º–∞—É—Ç–æ–º 10 —Å–µ–∫");
          const timeoutPromise = new Promise<NotificationPermission>((_, reject) => {
            setTimeout(() => {
              console.log("‚è∞ requestPermission: –¢–∞–π–º–∞—É—Ç –∏—Å—Ç–µ–∫!");
              reject(new Error("Request permission timeout"));
            }, 10000);
          });
          
          console.log("üîß requestPermission: –ó–∞–ø—É—Å–∫–∞–µ–º –≥–æ–Ω–∫—É –º–µ–∂–¥—É —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –∏ —Ç–∞–π–º–∞—É—Ç–æ–º");
          const result = await Promise.race([permissionPromise, timeoutPromise]);
          console.log("‚úÖ requestPermission: –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ:", result);
          
          set({
            permission: result,
            isLoading: false,
          });
          return result;
        } catch (error) {
          console.error("‚ùå requestPermission: –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:", error);
          set({
            error: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ (—Ç–∞–π–º–∞—É—Ç)",
            isLoading: false,
          });
          return "denied";
        }
      },

      setLoading: (loading) => {
        set({ isLoading: loading });
      },

      setError: (error) => {
        set({ error });
      },

      clearError: () => {
        set({ error: null });
      },

      // –£—Ç–∏–ª–∏—Ç—ã
      isSupported: () => {
        return isNotificationSupported();
      },

      canRequest: () => {
        const { permission } = get();
        return isNotificationSupported() && permission !== "denied";
      },

      isGranted: () => {
        const { permission } = get();
        return permission === "granted";
      },
    }),
    {
      name: "permission-storage",
      partialize: (state) => ({
        permission: state.permission,
      }),
    },
  ),
);
