import { useOfflineStore } from "@shared/stores/offlineStore";

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ offline —Å–æ—Å—Ç–æ—è–Ω–∏—è
 */
export function useOfflineStatus() {
  const { isOnline, isStable, isActuallyConnected, connectionQuality, networkMetrics } = useOfflineStore();

  // –í dev —Ä–µ–∂–∏–º–µ –¥–µ–ª–∞–µ–º –±–æ–ª–µ–µ –º—è–≥–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
  const isDevMode = process.env.NODE_ENV === "development";

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
  const realOnline = isOnline && isActuallyConnected;
  const realOffline = !isOnline || !isActuallyConnected;

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  const getStatusColor = () => {
    if (realOffline) return "red";
    
    switch (connectionQuality) {
      case 'excellent':
      case 'good':
        return "green";
      case 'fair':
        return "yellow";
      case 'poor':
        return "orange";
      case 'offline':
        return "red";
      default:
        return isStable ? "green" : "yellow";
    }
  };

  const statusColor = getStatusColor();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç—É—Å–∞
  const getStatusIcon = () => {
    switch (statusColor) {
      case "green": return "üü¢";
      case "yellow": return "üü°";
      case "orange": return "üü†";
      case "red": return "üî¥";
      default: return "‚ö™";
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
  const getStatusText = () => {
    if (realOffline) return "–û—Ñ–ª–∞–π–Ω";
    
    switch (connectionQuality) {
      case 'excellent': return "–û—Ç–ª–∏—á–Ω–æ";
      case 'good': return "–û–Ω–ª–∞–π–Ω";
      case 'fair': return "–ú–µ–¥–ª–µ–Ω–Ω–æ";
      case 'poor': return "–ü–ª–æ—Ö–æ";
      case 'offline': return "–û—Ñ–ª–∞–π–Ω";
      default: return isStable ? "–û–Ω–ª–∞–π–Ω" : "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ";
    }
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
  const getDetailedStatus = () => {
    if (realOffline) return "–ù–µ—Ç —Å–µ—Ç–∏";
    
    if (isOnline && !isActuallyConnected) {
      return isDevMode ? "–°–µ—Ç—å –µ—Å—Ç—å, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ..." : "–°–µ—Ç—å –µ—Å—Ç—å, –Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç";
    }
    
    switch (connectionQuality) {
      case 'excellent': return `–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (${networkMetrics.latency}ms)`;
      case 'good': return `–•–æ—Ä–æ—à–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (${networkMetrics.latency}ms)`;
      case 'fair': return `–ú–µ–¥–ª–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (${networkMetrics.latency}ms)`;
      case 'poor': return `–ü–ª–æ—Ö–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (${networkMetrics.latency}ms)`;
      default: return "–†–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ";
    }
  };

  return {
    isOnline: realOnline,
    isOffline: realOffline,
    isStable,
    isUnstable: !isStable,

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    browserOnline: isOnline, // –ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –±—Ä–∞—É–∑–µ—Ä
    actuallyConnected: isActuallyConnected, // –†–µ–∞–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    connectionQuality, // –ö–∞—á–µ—Å—Ç–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    networkMetrics, // –ú–µ—Ç—Ä–∏–∫–∏ —Å–µ—Ç–∏

    // –°—Ç–∞—Ç—É—Å –¥–ª—è UI
    status: realOnline ? (isStable ? "online" : "unstable") : "offline",

    // –¶–≤–µ—Ç –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
    statusColor,

    // –ò–∫–æ–Ω–∫–∞ –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
    statusIcon: getStatusIcon(),

    // –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    statusText: getStatusText(),

    // –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    detailedStatus: getDetailedStatus(),
  };
}
