import { reportErrorToDashboard } from "./actions/reportError";
import { createWebLogger } from "@gafus/logger";

import type { ErrorInfo, ErrorBoundaryConfig, ErrorReportData } from "@gafus/types";

// –°–æ–∑–¥–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è ErrorReporter
const logger = createWebLogger('web-error-reporter');

/**
 * –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –æ–± –æ—à–∏–±–∫–∞—Ö
 * –ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –ª—é–±—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö (React, Node.js, etc.)
 */
export class ErrorReporter {
  private config: ErrorBoundaryConfig;

  constructor(config: ErrorBoundaryConfig) {
    this.config = config;
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏
   */
  async reportError(
    error: Error,
    errorInfo: Partial<ErrorInfo> = {},
    additionalContext?: Record<string, unknown>,
  ): Promise<boolean> {
    try {
      const enhancedErrorInfo = this.enhanceErrorInfo(error, errorInfo, additionalContext);

      // –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
      if (this.config.logToConsole) {
        this.logToConsole(error, enhancedErrorInfo);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –Ω–∞—à –¥–∞—à–±–æ—Ä–¥
      await this.sendToDashboard(error, enhancedErrorInfo);

      return true;
    } catch (reportingError) {
      logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ", reportingError as Error, {
        operation: 'send_error_report_failed',
        appName: this.config.appName,
        environment: this.config.environment
      });
      return false;
    }
  }

  /**
   * –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ
   */
  private enhanceErrorInfo(
    error: Error,
    errorInfo: Partial<ErrorInfo>,
    additionalContext?: Record<string, unknown>,
  ): ErrorInfo {
    const baseInfo: ErrorInfo = {
      componentStack: "",
      errorBoundaryName: "ErrorReporter",
      appName: this.config.appName,
      url: this.getUrl(),
      userAgent: this.getUserAgent(),
      timestamp: Date.now(),
      ...errorInfo,
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
    if (additionalContext) {
      (baseInfo as ErrorInfo & { additionalContext: Record<string, unknown> }).additionalContext =
        additionalContext;
    }

    return baseInfo;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ URL (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ Node.js)
   */
  private getUrl(): string {
    if (typeof window !== "undefined" && window.location) {
      return window.location.href;
    }
    if (typeof process !== "undefined" && process.env?.VERCEL_URL) {
      return `https://${process.env.VERCEL_URL}`;
    }
    return (typeof process !== "undefined" && process.env?.NEXT_PUBLIC_SITE_URL) || "unknown";
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ User Agent
   */
  private getUserAgent(): string {
    if (typeof navigator !== "undefined" && navigator.userAgent) {
      return navigator.userAgent;
    }
    if (typeof process !== "undefined" && process.version) {
      return `Node.js ${process.version}`;
    }
    return "unknown";
  }

  /**
   * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
   */
  private logToConsole(error: Error, errorInfo: ErrorInfo): void {
    logger.warn(`üö® –û—à–∏–±–∫–∞ –≤ ${this.config.appName}`, {
      operation: 'log_error_to_console',
      appName: this.config.appName,
      errorMessage: error.message,
      errorStack: error.stack
    });
    logger.error("–û—à–∏–±–∫–∞:", error, {
      operation: 'log_error_details',
      appName: this.config.appName
    });
    logger.error("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:", new Error("Error info"), {
      operation: 'log_error_info',
      appName: this.config.appName,
      errorInfo: errorInfo
    });
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –Ω–∞—à –¥–∞—à–±–æ—Ä–¥ –æ—à–∏–±–æ–∫ —á–µ—Ä–µ–∑ Server Action
   */
  private async sendToDashboard(error: Error, errorInfo: ErrorInfo): Promise<void> {
    try {
      const errorData: ErrorReportData = {
        message: error.message,
        stack: error.stack,
        appName: this.config.appName,
        environment: this.config.environment || "development",
        url: errorInfo.url,
        userAgent: errorInfo.userAgent,
        userId: errorInfo.userId,
        sessionId: errorInfo.sessionId,
        componentStack: errorInfo.componentStack,
        additionalContext: (errorInfo as ErrorInfo & { additionalContext: Record<string, unknown> })
          .additionalContext,
        tags: this.generateTags(error, errorInfo),
      };

      const result = await reportErrorToDashboard(errorData);

      if (this.config.logToConsole) {
        if (result.success) {
          logger.success('‚úÖ –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –¥–∞—à–±–æ—Ä–¥', {
            operation: 'error_sent_to_dashboard',
            errorId: result.errorId,
            appName: this.config.appName
          });
        } else {
          logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –¥–∞—à–±–æ—Ä–¥', new Error('Failed to save error report'), {
            operation: 'error_dashboard_send_failed',
            appName: this.config.appName
          });
        }
      }
    } catch (dashboardError) {
      logger.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –¥–∞—à–±–æ—Ä–¥", dashboardError as Error, {
        operation: 'dashboard_send_error',
        appName: this.config.appName
      });
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–≥–æ–≤ –¥–ª—è –æ—à–∏–±–∫–∏
   */
  private generateTags(error: Error, errorInfo: ErrorInfo): string[] {
    const tags: string[] = [];

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ –ø–æ —Ç–∏–ø—É –æ—à–∏–±–∫–∏
    if (error.name) {
      tags.push(error.name);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É
    if (errorInfo.errorBoundaryName) {
      tags.push(errorInfo.errorBoundaryName);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ –ø–æ –æ–∫—Ä—É–∂–µ–Ω–∏—é
    if (this.config.environment) {
      tags.push(this.config.environment);
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
    tags.push(this.config.appName);

    return tags;
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   */
  updateConfig(newConfig: Partial<ErrorBoundaryConfig>): void {
    this.config = { ...this.config, ...newConfig };
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   */
  getConfig(): ErrorBoundaryConfig {
    return { ...this.config };
  }
}
