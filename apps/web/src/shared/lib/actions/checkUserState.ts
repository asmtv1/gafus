"use server";

import { z } from "zod";
import { createWebLogger } from "@gafus/logger";

import { checkUserState } from "@shared/lib/auth/login-utils";

const logger = createWebLogger('web-check-user-state');

const usernameSchema = z
  .string()
  .trim()
  .min(1, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
  .max(100, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
  .transform((value) => value.toLowerCase());

export async function checkUserStateAction(username: string) {
  try {
    const normalizedUsername = usernameSchema.parse(username);

    logger.warn("üîç checkUserState server action called", { operation: 'warn' });
    logger.warn("üë§ Username:", { normalizedUsername, operation: 'warn' });

    const state = await checkUserState(normalizedUsername);
    logger.warn("‚úÖ User state:", { state, operation: 'warn' });

    return state;
  } catch (error) {
    logger.error("‚ùå –û—à–∏–±–∫–∞ –≤ checkUserStateAction:", error as Error, { operation: 'error' });
    throw new Error("–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
  }
}
