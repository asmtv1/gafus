/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ñ–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–µ—Ç–∏ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
 */

"use client";

import { useEffect, useState } from 'react';
import { useOfflineStore } from '@shared/stores/offlineStore';
import { useServiceWorker } from '@shared/hooks/useServiceWorker';

type CacheStatus = Record<string, {
  entries: number;
  size: number;
}>;

export function OfflineStatus() {
  const { isOnline, syncQueue, syncErrors } = useOfflineStore();
  const { getCacheStatus } = useServiceWorker();
  
  const [cacheStatus, setCacheStatus] = useState<CacheStatus | null>(null);
  const [showStatus, setShowStatus] = useState(false);
  const [isSyncing, setIsSyncing] = useState(false);

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫—ç—à–∞
  useEffect(() => {
    const fetchCacheStatus = async () => {
      try {
        const status = await getCacheStatus();
        if (status && typeof status === 'object' && 'status' in status) {
          setCacheStatus(status.status as CacheStatus);
        }
      } catch (error) {
        console.warn('Failed to fetch cache status:', error);
      }
    };

    fetchCacheStatus();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    const interval = setInterval(fetchCacheStatus, 30000);
    return () => clearInterval(interval);
  }, [getCacheStatus]);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–µ—Ç–∏
  useEffect(() => {
    if (!isOnline) {
      setShowStatus(true);
      // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      const timer = setTimeout(() => setShowStatus(false), 5000);
      return () => clearTimeout(timer);
    } else {
      setShowStatus(false);
    }
  }, [isOnline]);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
  useEffect(() => {
    if (syncQueue.length > 0) {
      setIsSyncing(true);
    } else {
      setIsSyncing(false);
    }
  }, [syncQueue.length]);

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∫—ç—à–∞
  const formatCacheSize = (bytes: number): string => {
    if (bytes === 0) return '0 B';
    const k = 1024;
    const sizes = ['B', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };

  // –ü–æ–¥—Å—á—ë—Ç –æ–±—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –∫—ç—à–∞
  const totalCacheSize = cacheStatus 
    ? Object.values(cacheStatus).reduce((sum, cache) => sum + cache.size, 0)
    : 0;

  const totalCacheEntries = cacheStatus
    ? Object.values(cacheStatus).reduce((sum, cache) => sum + cache.entries, 0)
    : 0;

  if (!showStatus && !isSyncing && syncQueue.length === 0) {
    return null;
  }

  return (
    <div className="fixed top-4 right-4 z-50 max-w-sm">
      {/* –û—Ñ–ª–∞–π–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */}
      {!isOnline && (
        <div className="bg-orange-500 text-white p-4 rounded-lg shadow-lg mb-2">
          <div className="flex items-center">
            <div className="text-2xl mr-3">üì±</div>
            <div>
              <div className="font-semibold">–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É</div>
              <div className="text-sm opacity-90">
                –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ –∫—ç—à–∞
              </div>
            </div>
          </div>
        </div>
      )}

      {/* –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è */}
      {isSyncing && (
        <div className="bg-blue-500 text-white p-4 rounded-lg shadow-lg mb-2">
          <div className="flex items-center">
            <div className="text-2xl mr-3 animate-spin">üîÑ</div>
            <div>
              <div className="font-semibold">–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</div>
              <div className="text-sm opacity-90">
                {syncQueue.length} –¥–µ–π—Å—Ç–≤–∏–π –≤ –æ—á–µ—Ä–µ–¥–∏
              </div>
            </div>
          </div>
        </div>
      )}

      {/* –û—à–∏–±–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ */}
      {syncErrors.length > 0 && (
        <div className="bg-red-500 text-white p-4 rounded-lg shadow-lg mb-2">
          <div className="flex items-center">
            <div className="text-2xl mr-3">‚ö†Ô∏è</div>
            <div>
              <div className="font-semibold">–û—à–∏–±–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏</div>
              <div className="text-sm opacity-90">
                {syncErrors.length} –æ—à–∏–±–æ–∫
              </div>
            </div>
          </div>
        </div>
      )}

      {/* –°—Ç–∞—Ç—É—Å –∫—ç—à–∞ (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ) */}
      {process.env.NODE_ENV === 'development' && cacheStatus && (
        <div className="bg-gray-800 text-white p-4 rounded-lg shadow-lg text-xs">
          <div className="font-semibold mb-2">üì¶ –°—Ç–∞—Ç—É—Å –∫—ç—à–∞</div>
          <div className="space-y-1">
            <div>–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {totalCacheEntries}</div>
            <div>–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {formatCacheSize(totalCacheSize)}</div>
            {Object.entries(cacheStatus).map(([name, status]) => (
              <div key={name} className="opacity-75">
                {name.split('-')[1]}: {status.entries} –∑–∞–ø–∏—Å–µ–π ({formatCacheSize(status.size)})
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}