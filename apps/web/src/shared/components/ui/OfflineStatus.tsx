"use client";

import { useOfflineStatus } from "@shared/hooks/useOfflineStatus";
import { useSyncQueue } from "@shared/hooks/useSyncQueue";
import { useEffect, useState } from "react";

export default function OfflineStatus() {
  const { 
    isOnline,
    statusIcon, 
    statusText, 
    statusColor, 
    detailedStatus
  } = useOfflineStatus();
  const { queueLength, hasPendingActions, lastSyncDate, formatLastSync, syncOfflineActions } =
    useSyncQueue();
  const [showDetails, setShowDetails] = useState(false);
  const [isChecking, setIsChecking] = useState(false);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    if (showDetails) {
      const timer = setTimeout(() => setShowDetails(false), 5000);
      return () => clearTimeout(timer);
    }
  }, [showDetails]);

  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  const handleForceCheck = async () => {
    setIsChecking(true);
    try {
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—á–µ—Ä–µ–¥–∏
      await syncOfflineActions();
    } catch (error) {
      console.warn("Force sync failed:", error);
    } finally {
      setIsChecking(false);
    }
  };

  // –ï—Å–ª–∏ –Ω–µ—Ç pending –¥–µ–π—Å—Ç–≤–∏–π –∏ –º—ã –æ–Ω–ª–∞–π–Ω, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  if (!hasPendingActions && isOnline) {
    return null;
  }

  return (
    <div
      style={{
        position: "fixed",
        top: "5px",
        left: "50%",
        transform: "translateX(-42%)",
        background: statusColor === "green" ? "#d4edda" : "#f8d7da",
        border: `1px solid ${statusColor === "green" ? "#c3e6cb" : "#f5c6cb"}`,
        borderRadius: "8px",
        padding: "12px",
        minWidth: "200px",
        maxWidth: "300px",
        zIndex: 1000,
        boxShadow: "0 4px 12px rgba(0,0,0,0.15)",
        cursor: "pointer",
        transition: "all 0.3s ease",
      }}
      onClick={() => setShowDetails(!showDetails)}
    >
      {/* –û—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∞—Ç—É—Å */}
      <div style={{ display: "flex", alignItems: "center", gap: "8px", marginBottom: "8px" }}>
        <span style={{ fontSize: "18px" }}>{statusIcon}</span>
        <span style={{ fontWeight: "bold" }}>{statusText}</span>
        {process.env.NODE_ENV === "development" && (
          <span style={{ fontSize: "10px", color: "#ffc107", fontWeight: "bold" }}>DEV</span>
        )}

        {hasPendingActions && (
          <span
            style={{
              background: "#dc3545",
              color: "white",
              borderRadius: "12px",
              padding: "2px 8px",
              fontSize: "10px",
              fontWeight: "bold",
            }}
          >
            {queueLength}
          </span>
        )}
      </div>

      {/* –î–µ—Ç–∞–ª–∏ (–ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –ø—Ä–∏ –∫–ª–∏–∫–µ) */}
      {showDetails && (
        <div style={{ borderTop: "1px solid rgba(0,0,0,0.1)", paddingTop: "8px" }}>
          {/* –î–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è */}
          <div style={{ marginBottom: "8px" }}>
            <strong>–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ:</strong> {detailedStatus}
          </div>

          {/* –î–µ—Ç–∞–ª–∏ —Å–µ—Ç–∏ */}
          <div style={{ marginBottom: "8px", fontSize: "12px", opacity: 0.8 }}>
            –°—Ç–∞—Ç—É—Å: {detailedStatus}
            {process.env.NODE_ENV === "development" && (
              <>
                <br />
                <span style={{ color: "#ffc107" }}>üîß Dev —Ä–µ–∂–∏–º</span>
              </>
            )}
          </div>

          {/* –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ */}
          <div style={{ marginBottom: "8px" }}>
            <strong>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:</strong>
            {hasPendingActions ? (
              <span style={{ color: "#dc3545" }}> {queueLength} –¥–µ–π—Å—Ç–≤–∏–π –æ–∂–∏–¥–∞—é—Ç</span>
            ) : (
              <span style={{ color: "#28a745" }}> –í—Å–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ</span>
            )}
          </div>

          {/* –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ */}
          {lastSyncDate && (
            <div style={{ marginBottom: "8px" }}>
              <strong>–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:</strong> {formatLastSync()}
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ */}
          {hasPendingActions && (
            <div style={{ marginTop: "12px" }}>
              <button
                onClick={(e) => {
                  e.stopPropagation();
                  handleForceCheck();
                }}
                disabled={isChecking}
                style={{
                  background: "#007bff",
                  color: "white",
                  border: "none",
                  borderRadius: "4px",
                  padding: "6px 12px",
                  fontSize: "12px",
                  cursor: isChecking ? "not-allowed" : "pointer",
                  opacity: isChecking ? 0.6 : 1,
                }}
              >
                {isChecking ? "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è..." : "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å"}
              </button>
            </div>
          )}

          {/* Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è dev —Ä–µ–∂–∏–º–∞ */}
          {process.env.NODE_ENV === "development" && (
            <div
              style={{
                marginTop: "12px",
                padding: "8px",
                background: "#f8f9fa",
                border: "1px solid #dee2e6",
                borderRadius: "4px",
                fontSize: "10px",
                fontFamily: "monospace",
              }}
            >
              <strong>Debug Info:</strong>
              <br />
              ‚Ä¢ Store isOnline: {isOnline ? "true" : "false"}
              <br />
              ‚Ä¢ Queue length: {queueLength}
              <br />
              ‚Ä¢ Last sync: {lastSyncDate ? formatLastSync() : "Never"}
              <br />
              ‚Ä¢ Has pending: {hasPendingActions ? "true" : "false"}
              <br />
              ‚Ä¢ Status color: {statusColor}
              <br />
              ‚Ä¢ Detailed status: {detailedStatus}
            </div>
          )}
        </div>
      )}

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–ª–∏–∫–∞ */}
      <div
        style={{
          position: "absolute",
          top: "4px",
          right: "4px",
          fontSize: "10px",
          opacity: 0.5,
        }}
      >
        {showDetails ? "‚ñ≤" : "‚ñº"}
      </div>
    </div>
  );
}