#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ web –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ error-dashboard
 * 
 * –ó–∞–ø—É—Å–∫: node test-web-error-dashboard.js
 */

const { createWebLogger } = require('@gafus/logger');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –ª–æ–≥–æ–≤ web –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ error-dashboard...\n');

// –°–æ–∑–¥–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è web –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const logger = createWebLogger('web-test');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
console.log('üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:');

logger.info('Web App: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—É—Ä—Å–æ–≤', {
  operation: 'page_view',
  page: '/courses',
  userId: 'user-123',
  sessionId: 'session-456'
});

logger.warn('Web App: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –º–µ–¥–ª–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ', {
  operation: 'slow_loading',
  page: '/profile',
  loadTime: 3500,
  threshold: 3000
});

logger.error('Web App: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—É—Ä—Å–∞', new Error('Network timeout'), {
  operation: 'course_load_error',
  courseId: 'course-789',
  userId: 'user-123',
  retryCount: 3
});

logger.success('Web App: –ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω', {
  operation: 'course_completed',
  courseId: 'course-456',
  userId: 'user-789',
  completionTime: '2024-01-15T10:30:00Z'
});

logger.fatal('Web App: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', new Error('Connection pool exhausted'), {
  operation: 'database_error',
  component: 'prisma',
  connectionCount: 100,
  maxConnections: 100
});

logger.dev('Web App: –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
  operation: 'debug_info',
  component: 'training-store',
  state: { currentStep: 5, totalSteps: 10 }
});

console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!');
console.log('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ error-dashboard –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π');
console.log('üìä –û–∂–∏–¥–∞–µ–º—ã–µ –∑–∞–ø–∏—Å–∏:');
console.log('   - web-test: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—É—Ä—Å–æ–≤ (info)');
console.log('   - web-test: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –º–µ–¥–ª–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ (warn)');
console.log('   - web-test: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—É—Ä—Å–∞ (error)');
console.log('   - web-test: –ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω (success)');
console.log('   - web-test: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (fatal)');
console.log('   - web-test: –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (dev)');
console.log('\nüéØ –í—Å–µ –ª–æ–≥–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ error-dashboard —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º web');
