#!/usr/bin/env node
/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ auth –≤ error-dashboard
 * 
 * –ó–∞–ø—É—Å–∫: node packages/auth/test-auth-error-dashboard.js
 */

import { createWebLogger } from '@gafus/logger/dist/index.js';

async function testAuthErrorDashboard() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ auth –≤ error-dashboard...\n');

  try {
    // –¢–µ—Å—Ç 1: Auth Telegram –ª–æ–≥–≥–µ—Ä
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º auth-telegram –ª–æ–≥–≥–µ—Ä...');
    const telegramLogger = createWebLogger('auth-telegram');
    await telegramLogger.error('Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', new Error('User not found'), {
      username: 'testuser',
      hasUser: false,
      hasTelegramId: false
    });
    console.log('‚úÖ Auth Telegram error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 2: Auth Owner Check –ª–æ–≥–≥–µ—Ä
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º auth-owner-check –ª–æ–≥–≥–µ—Ä...');
    const ownerLogger = createWebLogger('auth-owner-check');
    await ownerLogger.error('Error in getIsOwner', new Error('Session validation failed'), {
      profileUsername: 'testuser',
      hasReq: true,
      hasQueryUsername: false
    });
    console.log('‚úÖ Auth Owner Check error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 3: Telegram Bot Token Error
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram Bot Token Error...');
    await telegramLogger.error('TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω', new Error('Missing bot token'), {
      hasBotToken: false,
      environment: 'production'
    });
    console.log('‚úÖ Telegram Bot Token error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 4: Telegram API Error
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram API Error...');
    await telegramLogger.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram', new Error('HTTP 400: Bad Request'), {
      status: 400,
      statusText: 'Bad Request',
      responseBody: '{"error_code":400,"description":"Bad Request: chat not found"}',
      username: 'testuser',
      telegramId: '123456789'
    });
    console.log('‚úÖ Telegram API error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 5: –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å Warning
    console.log('5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å warning...');
    telegramLogger.warn('–ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ', {
      username: 'testuser',
      timeSinceLastRequest: 30000,
      minInterval: 60000
    });
    console.log('‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å warning –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 6: Session Error
    console.log('6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Session Error...');
    await ownerLogger.error('Session validation failed', new Error('Invalid session token'), {
      profileUsername: 'testuser',
      hasReq: false,
      hasQueryUsername: false
    });
    console.log('‚úÖ Session error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 7: Auth Success (–µ—Å–ª–∏ –µ—Å—Ç—å)
    console.log('7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Auth Success...');
    telegramLogger.success('Password reset request sent successfully', {
      username: 'testuser',
      telegramId: '123456789',
      tokenGenerated: true
    });
    console.log('‚úÖ Auth Success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 8: Owner Check Success
    console.log('8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Owner Check Success...');
    ownerLogger.success('User is owner of profile', {
      profileUsername: 'testuser',
      currentUsername: 'testuser',
      isOwner: true
    });
    console.log('‚úÖ Owner Check Success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ error-dashboard:');
    console.log('   - Reports: http://localhost:3001/reports');
    console.log('   - –ò—â–∏—Ç–µ –ª–æ–≥–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É: auth-telegram, auth-owner-check');
    console.log('\nüîç –û–∂–∏–¥–∞–µ–º—ã–µ –ª–æ–≥–∏:');
    console.log('   - Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('   - TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω');
    console.log('   - –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram');
    console.log('   - Error in getIsOwner');
    console.log('   - –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ (—Ç–æ–ª—å–∫–æ –≤ production)');
    console.log('   - Success —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAuthErrorDashboard().then(() => {
  console.log('\n‚ú® –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  process.exit(0);
}).catch((error) => {
  console.error('\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error);
  process.exit(1);
});
