#!/usr/bin/env node
/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ react-query –≤ error-dashboard
 * 
 * –ó–∞–ø—É—Å–∫: node packages/react-query/test-react-query-error-dashboard.js
 */

import { createWebLogger } from '@gafus/logger/dist/index.js';

async function testReactQueryErrorDashboard() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ react-query –≤ error-dashboard...\n');

  try {
    // –¢–µ—Å—Ç 1: React Query Optimized –ª–æ–≥–≥–µ—Ä
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º react-query-optimized –ª–æ–≥–≥–µ—Ä...');
    const optimizedLogger = createWebLogger('react-query-optimized');
    
    // –¢–µ—Å—Ç Courses Data
    optimizedLogger.info('Courses loaded: courses-list', {
      dataType: 'courses',
      key: 'courses-list',
      hasData: true,
      strategy: 'courses'
    });
    console.log('‚úÖ Courses data info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç User Profile Data
    optimizedLogger.info('User profile loaded: user-123', {
      dataType: 'user-profile',
      key: 'user-123',
      hasData: true,
      strategy: 'user-profile'
    });
    console.log('‚úÖ User profile data info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç Statistics Data
    optimizedLogger.info('Statistics loaded: stats-dashboard', {
      dataType: 'statistics',
      key: 'stats-dashboard',
      hasData: true,
      strategy: 'statistics'
    });
    console.log('‚úÖ Statistics data info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç Search Data
    optimizedLogger.info('Search data loaded: search-results', {
      dataType: 'search',
      key: 'search-results',
      hasData: true,
      strategy: 'search'
    });
    console.log('‚úÖ Search data info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç Real-time Data
    optimizedLogger.info('Real-time data loaded: live-updates', {
      dataType: 'real-time',
      key: 'live-updates',
      hasData: true,
      strategy: 'real-time'
    });
    console.log('‚úÖ Real-time data info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç Optimized Data
    optimizedLogger.info('Data loaded with courses strategy: optimized-courses', {
      dataType: 'optimized',
      key: 'optimized-courses',
      hasData: true,
      strategy: 'courses'
    });
    console.log('‚úÖ Optimized data info –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 2: React Query Error (–µ—Å–ª–∏ –µ—Å—Ç—å)
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º React Query Error...');
    await optimizedLogger.error('React Query fetch failed', new Error('Network timeout'), {
      queryKey: 'courses-list',
      dataType: 'courses',
      strategy: 'courses',
      retryCount: 3
    });
    console.log('‚úÖ React Query error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 3: Cache Miss Warning
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Cache Miss Warning...');
    optimizedLogger.warn('Cache miss for query', {
      queryKey: 'user-profile-456',
      dataType: 'user-profile',
      strategy: 'user-profile',
      cacheAge: 0
    });
    console.log('‚úÖ Cache miss warning –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 4: Query Success
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Query Success...');
    optimizedLogger.success('Query completed successfully', {
      queryKey: 'statistics-summary',
      dataType: 'statistics',
      strategy: 'statistics',
      duration: '150ms',
      dataSize: '2.5KB'
    });
    console.log('‚úÖ Query success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 5: Stale Data Warning
    console.log('5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Stale Data Warning...');
    optimizedLogger.warn('Stale data detected', {
      queryKey: 'search-results',
      dataType: 'search',
      strategy: 'search',
      staleTime: 1000,
      lastUpdated: Date.now() - 5000
    });
    console.log('‚úÖ Stale data warning –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ error-dashboard:');
    console.log('   - Reports: http://localhost:3001/reports');
    console.log('   - –ò—â–∏—Ç–µ –ª–æ–≥–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É: react-query-optimized');
    console.log('\nüîç –û–∂–∏–¥–∞–µ–º—ã–µ –ª–æ–≥–∏:');
    console.log('   - Courses loaded info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - User profile loaded info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Statistics loaded info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Search data loaded info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Real-time data loaded info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Data loaded with strategy info —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - React Query fetch failed error —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Cache miss warning —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –≤ production)');
    console.log('   - Query completed successfully success —Å–æ–æ–±—â–µ–Ω–∏—è');
    console.log('   - Stale data detected warning —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –≤ production)');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testReactQueryErrorDashboard().then(() => {
  console.log('\n‚ú® –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  process.exit(0);
}).catch((error) => {
  console.error('\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error);
  process.exit(1);
});
