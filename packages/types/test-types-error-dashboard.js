#!/usr/bin/env node
/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ types –≤ error-dashboard
 * 
 * –ó–∞–ø—É—Å–∫: node packages/types/test-types-error-dashboard.js
 */

import { createLogger } from '@gafus/types/dist/utils/logger.js';

async function testTypesErrorDashboard() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ types –≤ error-dashboard...\n');

  try {
    // –¢–µ—Å—Ç 1: Web –ª–æ–≥–≥–µ—Ä
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º web –ª–æ–≥–≥–µ—Ä...');
    const webLogger = createLogger('web-client');
    await webLogger.error('Failed to load user data', new Error('Network timeout'), {
      userId: 'user-123',
      endpoint: '/api/user',
      retryCount: 3
    });
    console.log('‚úÖ Web error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 2: Trainer panel –ª–æ–≥–≥–µ—Ä
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º trainer panel –ª–æ–≥–≥–µ—Ä...');
    const trainerLogger = createLogger('trainer-panel');
    await trainerLogger.error('Failed to save training data', new Error('Validation error'), {
      trainingId: 'training-456',
      userId: 'trainer-789',
      errors: ['Invalid exercise type', 'Missing duration']
    });
    console.log('‚úÖ Trainer panel error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 3: Worker –ª–æ–≥–≥–µ—Ä
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º worker –ª–æ–≥–≥–µ—Ä...');
    const workerLogger = createLogger('worker-processor');
    await workerLogger.error('Failed to process queue job', new Error('Database connection failed'), {
      jobId: 'job-123',
      queueName: 'notifications',
      attempt: 2
    });
    console.log('‚úÖ Worker error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 4: Telegram bot –ª–æ–≥–≥–µ—Ä
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º telegram bot –ª–æ–≥–≥–µ—Ä...');
    const botLogger = createLogger('telegram-bot');
    await botLogger.error('Failed to send message', new Error('API rate limit exceeded'), {
      chatId: 'chat-456',
      messageType: 'notification',
      userId: 'user-789'
    });
    console.log('‚úÖ Telegram bot error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 5: Error dashboard –ª–æ–≥–≥–µ—Ä (–Ω–µ –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —Å–µ–±—è)
    console.log('5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º error dashboard –ª–æ–≥–≥–µ—Ä...');
    const dashboardLogger = createLogger('error-dashboard');
    await dashboardLogger.error('Failed to process error report', new Error('Invalid JSON'), {
      reportId: 'report-123',
      source: 'web-app'
    });
    console.log('‚úÖ Error dashboard error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω (–Ω–µ –≤ —Å–µ–±—è)\n');

    // –¢–µ—Å—Ç 6: Bull board –ª–æ–≥–≥–µ—Ä
    console.log('6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º bull board –ª–æ–≥–≥–µ—Ä...');
    const bullLogger = createLogger('bull-board');
    await bullLogger.error('Failed to load queue stats', new Error('Redis connection lost'), {
      queueName: 'notifications',
      statsType: 'failed'
    });
    console.log('‚úÖ Bull board error –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 7: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –≤ production)
    console.log('7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è...');
    webLogger.warn('Slow API response detected', {
      endpoint: '/api/data',
      responseTime: 5000,
      threshold: 3000
    });
    console.log('‚úÖ Warning –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    // –¢–µ—Å—Ç 8: –£—Å–ø–µ—à–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    console.log('8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏...');
    webLogger.success('User data loaded successfully', {
      userId: 'user-123',
      dataSize: '2.5KB',
      duration: '150ms'
    });
    console.log('‚úÖ Success –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω\n');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ error-dashboard:');
    console.log('   - Reports: http://localhost:3001/reports');
    console.log('   - Push Logs: http://localhost:3001/push-logs');
    console.log('   - –ò—â–∏—Ç–µ –ª–æ–≥–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É: web-client, trainer-panel, worker-processor, etc.');
    console.log('\nüîç –û–∂–∏–¥–∞–µ–º—ã–µ –ª–æ–≥–∏:');
    console.log('   - Web –æ—à–∏–±–∫–∏ –≤ /api/report');
    console.log('   - Worker –æ—à–∏–±–∫–∏ –≤ /api/push-logs');
    console.log('   - Telegram bot –æ—à–∏–±–∫–∏ –≤ /api/report');
    console.log('   - Error dashboard –æ—à–∏–±–∫–∏ –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ —Å–µ–±—è');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTypesErrorDashboard().then(() => {
  console.log('\n‚ú® –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  process.exit(0);
}).catch((error) => {
  console.error('\nüí• –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error);
  process.exit(1);
});
