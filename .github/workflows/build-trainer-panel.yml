name: Build Trainer Panel Only

on:
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild even if no changes'
        required: false
        default: false
        type: boolean
  push:
    paths:
      - 'apps/trainer-panel/**'
      - 'packages/**'
      - 'Dockerfile-trainer-panel'
      - 'docker-compose.prod.yml'
      - '.github/workflows/build-trainer-panel.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: asmtv1

jobs:
  build-trainer-panel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Trainer Panel image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile-trainer-panel
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/gafus-trainer-panel:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e
            echo "ðŸš€ Deploying updated trainer panel..."
            
            cd /root/gafus
            
            # Pull new trainer panel image
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/gafus-trainer-panel:latest
            
            # Tag for local use
            docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/gafus-trainer-panel:latest trainer-panel:latest
            
            # Restart only trainer panel service
            docker-compose -f docker-compose.prod.yml restart trainer-panel
            
            echo "âœ… Trainer panel deployed successfully!"
